<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<proxy name="beetrack" startOnLoad="true" statistics="disable" trace="disable" transports="https,http" xmlns="http://ws.apache.org/ns/synapse">
   <target>
      <inSequence>
         <property name="apiUrl" expression="json-eval($.apiUrl)"/>
         <property name="accessToken" expression="json-eval($.accessToken)"/>
         <property name="identifier" expression="json-eval($.identifier)"/>
         <property name="vehicleId" expression="json-eval($.vehicleId)"/>
         <property name="truckIdentifier" expression="json-eval($.truckIdentifier)"/>
         <property name="date" expression="json-eval($.date)"/>
         <property name="dispatches" expression="json-eval($.dispatches)"/>
         <property name="driverIdentifier" expression="json-eval($.driverIdentifier)"/>
         <property name="enableEstimations" expression="json-eval($.enableEstimations)"/>
         <property name="routeId" expression="json-eval($.routeId)"/>
         <property name="startedAt" expression="json-eval($.startedAt)"/>
         <property name="endedAt" expression="json-eval($.endedAt)"/>
         <beetrack.init>
            <apiUrl>{$ctx:apiUrl}</apiUrl>
            <accessToken>{$ctx:accessToken}</accessToken>
         </beetrack.init>
         <switch source="get-property('transport','Action')">
            <case regex="urn:createVehicle">
               <beetrack.createVehicle>
                  <identifier>{$ctx:identifier}</identifier>
               </beetrack.createVehicle>
            </case>
            <case regex="urn:getVehicle">
               <beetrack.getVehicle>
                  <vehicleId>{$ctx:vehicleId}</vehicleId>
               </beetrack.getVehicle>
            </case>
            <case regex="urn:listVehicles">
               <beetrack.listVehicles>
               </beetrack.listVehicles>
            </case>
            <case regex="urn:createRoute">
               <beetrack.createRoute>
                  <truckIdentifier>{$ctx:truckIdentifier}</truckIdentifier>
                  <date>{$ctx:date}</date>
                  <dispatches>{$ctx:dispatches}</dispatches>
                  <driverIdentifier>{$ctx:driverIdentifier}</driverIdentifier>
                  <enableEstimations>{$ctx:enableEstimations}</enableEstimations>
               </beetrack.createRoute>
            </case>
            <case regex="urn:getRoute">
               <beetrack.getRoute>
                  <routeId>{$ctx:routeId}</routeId>
               </beetrack.getRoute>
            </case>
            <case regex="urn:listRoutes">
               <beetrack.listRoutes>
                  <date>{$ctx:date}</date>
               </beetrack.listRoutes>
            </case>
            <case regex="urn:updateRoute">
               <beetrack.updateRoute>
                  <dispatches>{$ctx:dispatches}</dispatches>
                  <routeId>{$ctx:routeId}</routeId>
                  <startedAt>{$ctx:startedAt}</startedAt>
                  <endedAt>{$ctx:endedAt}</endedAt>
               </beetrack.updateRoute>
            </case>
         </switch>
         <respond/>
      </inSequence>
      <outSequence>
         <log/>
         <send/>
      </outSequence>
   </target>
   <description/>
</proxy>
